// ‚ö° Auto claim script with scheduled start time
function scheduleClaim(targetHour, targetMinute, targetSecond) {
  // T√≠nh timestamp m·ª•c ti√™u h√¥m nay
  const now = new Date();
  const target = new Date();
  target.setHours(targetHour, targetMinute, targetSecond, 0);

  // N·∫øu gi·ªù ƒë√£ qua th√¨ t·ª± ƒë·ªông +1 ng√†y
  if (target.getTime() <= now.getTime()) {
    target.setDate(target.getDate() + 1);
  }

  const startTime = target.getTime() - 2 * 60 * 1000; // b·∫Øt ƒë·∫ßu tr∆∞·ªõc 2 ph√∫t
  console.log(`‚è≥ Claim script s·∫Ω kh·ªüi ƒë·ªông l√∫c: ${new Date(startTime).toLocaleTimeString()}`);

  // Polling t·ªõi khi ƒë·∫øn gi·ªù b·∫Øt ƒë·∫ßu
  const waitInterval = setInterval(() => {
    if (Date.now() >= startTime) {
      clearInterval(waitInterval);
      console.log("üöÄ B·∫Øt ƒë·∫ßu loop check claim button...");

      const interval = setInterval(() => {
        const button = document.querySelector(
          "button.mantine-Button-root.mantine-UnstyledButton-root"
        );

        if (button && !button.disabled && button.innerText.trim() === "Claim") {
          console.log("‚úÖ Claim button found! Clicking...");

          // spam nhi·ªÅu click
          for (let i = 0; i < 50; i++) {
            button.click();
          }

          clearInterval(interval);
          console.log("üéØ Done!");
        }
      }, 5); // check m·ªói 5ms
    }
  }, 500); // check m·ªói 0.5s ƒë·ªÉ xem ƒë√£ t·ªõi gi·ªù ch∆∞a
}

// üëâ V√≠ d·ª•: ƒë·∫∑t claim l√∫c 20:00:00
scheduleClaim(20, 0, 0);
